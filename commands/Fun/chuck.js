const { SlashCommandBuilder } = require("@discordjs/builders");
const { MessageEmbed,MessageActionRow, MessageSelectMenu, MessageAttachment } = require('discord.js');
const axios = require('axios')
const translate = require("translatte")
const Memer = require("random-jokes-api");
const cmdName = "chuck"

module.exports = {
      guildOnly: false, // „Çµ„Éº„Éê„ÉºÂ∞ÇÁî®„Ç≥„Éû„É≥„Éâ„Åã„Å©„ÅÜ„Åã
    adminGuildOnly: false, // ÁÆ°ÁêÜËÄÖÁî®„Çµ„Éº„Éê„ÉºÂ∞ÇÁî®„Åã„Å©„ÅÜ„Åã
    data: new SlashCommandBuilder() // „Çπ„É©„ÉÉ„Ç∑„É•„Ç≥„Éû„É≥„ÉâÁôªÈå≤„ÅÆ„Åü„ÇÅ
        .setName(cmdName)
        .setDescription("Funs")
      
   .addSubcommand(subcommand => 
          subcommand
              .setName("advice")      
              .setDescription("„ÅÇ„Å™„Åü„Å´„Ç¢„Éâ„Éê„Ç§„Çπ„Çí„Åô„Çã„ÄÇ")
     )
      
   .addSubcommand(subcommand => 
          subcommand
              .setName("chat")              
     .setDescription("AI„Å®„ÉÅ„É£„ÉÉ„Éà„Åô„Çã„ÄÇ")
 	   .addStringOption(option => option.setName('text')
			.setDescription('ÊñáÂ≠ó„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ')
			.setRequired(true)),
     )            
      
   .addSubcommand(subcommand => 
          subcommand
                .setName("bujoku")              
     .setDescription("‰æÆËæ±„Åô„ÇãÊñáÁ´†„ÇíÊèê‰æõ„Åó„Åæ„Åô„ÄÇ")
     )   
      
   .addSubcommand(subcommand => 
          subcommand
              .setName("name")              
     .setDescription("ÂêçÂâç„Åã„ÇâÊÄßÂà•„ÇíÂà§Êñ≠„Åô„Çã„ÄÇ")
 	   .addStringOption(option => option.setName('name')
			.setDescription('ÊñáÂ≠ó„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ')
			.setRequired(true)),
     )      
   .addSubcommand(subcommand => 
          subcommand
              .setName("omosiroi")              
     .setDescription("„Åä„ÇÇ„Åó„Çç„ÅÑ„Åì„Å®„ÇíË®Ä„ÅÑ„Åæ„Åô„ÄÇü§î")
     )     
      .addSubcommand(subcommand => 
          subcommand
              .setName("joke")              
     .setDescription("ÂÜóË´á„ÇíË®Ä„ÅÑ„Åæ„Åô„ÄÇü§î")
     )        
      .addSubcommand(subcommand => 
          subcommand
              .setName("pun")              
     .setDescription("„ÉÄ„Ç∏„É£„É¨„ÇíË®Ä„ÅÑ„Åæ„Åô„ÄÇü§î")
     )   
   .addSubcommand(subcommand => 
          subcommand
              .setName("roast")              
     .setDescription("„ÅÇ„Å™„Åü„Çí„Åã„Çâ„Åã„ÅÑ„Åæ„Åô„ÄÇü§î")
     )     
      .addSubcommand(subcommand => 
          subcommand
              .setName("antijoke")              
     .setDescription("Âàá„ÇåËä∏„ÇíË®Ä„ÅÑ„Åæ„Åô„ÄÇü§î")
     )        
      .addSubcommand(subcommand => 
          subcommand
              .setName("quotes")              
     .setDescription("ÂêçË®Ä„ÇíË®Ä„ÅÑ„Åæ„Åô„ÄÇü§î")
     )   
     .addSubcommand(subcommand => 
          subcommand
              .setName("showerthought")              
     .setDescription("„Ç∑„É£„ÉØ„Éº„ÇΩ„Éº„Éà„ÇíË®Ä„ÅÑ„Åæ„Åô„ÄÇü§î")
     )     
      .addSubcommand(subcommand => 
          subcommand
              .setName("trivia")              
     .setDescription("„Éà„É™„Éì„Ç¢„ÇíË®Ä„ÅÑ„Åæ„Åô„ÄÇü§î")
     )        
      .addSubcommand(subcommand => 
          subcommand
              .setName("compliment")              
     .setDescription("Ë™â„ÇÅË®ÄËëâ„ÇíË®Ä„ÅÑ„Åæ„Åô„ÄÇü§î")
     )   
       .addSubcommand(subcommand => 
          subcommand
              .setName("truth")              
     .setDescription("„ÅÇ„Å™„Åü„ÅÆ‰∫ãÂÆü„ÇíË®Ä„Å£„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇü§î")
     )     
      .addSubcommand(subcommand => 
          subcommand
              .setName("dare")              
     .setDescription("„ÅÇ„Å™„Åü„ÅØ„Åì„Çå„Çí„Åô„ÇãÂãáÊ∞ó„ÅØ„ÅÇ„Çä„Åæ„Åô„ÅãÔºüü§î")
     )    
      .addSubcommand(subcommand => 
          subcommand
              .setName("chucknorris")              
     .setDescription("„ÉÅ„Çß„ÉÉ„ÇØ„Éª„Éé„É™„Çπ„ÄÇü§î")
     )
  ,
      
    async execute(i, client) {        
      
            
      if (i.options.getSubcommand()=== 'truth') {
let text = Memer.truth()
const res = await translate(text, {from: "auto", to: "ja"})    
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`‰∫ãÂÆü„ÇíË®Ä„Å£„Å¶„Åè„Å†„Åï„ÅÑ`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  i.reply({ embeds: [Embed] });
     } 
      
      if (i.options.getSubcommand()=== 'dare') {
let text = Memer.dare()
const res = await translate(text, {from: "auto", to: "ja"})    
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`„ÅÇ„Å™„Åü„ÅØ„Åì„Çå„Çí„Åô„ÇãÂãáÊ∞ó„ÅØ„ÅÇ„Çä„Åæ„Åô„ÅãÔºü`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  i.reply({ embeds: [Embed] });
     }
      
      if (i.options.getSubcommand()=== 'compliment') {
let text = Memer.compliment()
const res = await translate(text, {from: "auto", to: "ja"})    
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`Ë™â„ÇÅË®ÄËëâ`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  i.reply({ embeds: [Embed] });
     } 
      
      if (i.options.getSubcommand()=== 'trivia') {
let text = Memer.trivia()
const res = await translate(text, {from: "auto", to: "ja"})    
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`„Éà„É™„Éì„Ç¢`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  i.reply({ embeds: [Embed] });
     }
      
     if (i.options.getSubcommand()=== 'chucknorris') {
let text = Memer.chuckNorris()
const res = await translate(text, {from: "auto", to: "ja"})    
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`„ÉÅ„Çß„ÉÉ„ÇØ„Éª„Éé„É™„Çπ`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  i.reply({ embeds: [Embed] });
     }
      
     if (i.options.getSubcommand()=== 'showerthought') {
let text = Memer.showerThought()
const res = await translate(text, {from: "auto", to: "ja"})    
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`„Ç∑„É£„ÉØ„Éº„ÇΩ„Éº„Éà`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  i.reply({ embeds: [Embed] });
     }
      
     if (i.options.getSubcommand()=== 'quotes') {
let text = Memer.quotes()
const res = await translate(text, {from: "auto", to: "ja"})    
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`ÂêçË®Ä`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  i.reply({ embeds: [Embed] });
     }
      
     if (i.options.getSubcommand()=== 'antijoke') {
let text = Memer.antijoke()
const res = await translate(text, {from: "auto", to: "ja"})    
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`Âàá„ÇåËä∏`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  i.reply({ embeds: [Embed] });
     }
      
     if (i.options.getSubcommand()=== 'roast') {
let text = Memer.roast()
const res = await translate(text, {from: "auto", to: "ja"})    
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`„Åã„Çâ„Åã„ÅÑ„ÅÆ„ÅäË®ÄËëâ`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  i.reply({ embeds: [Embed] });
     }
      
     if (i.options.getSubcommand()=== 'pun') {
let text = Memer.pun()
const res = await translate(text, {from: "auto", to: "ja"})    
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`„ÉÄ„Ç∏„É£„É¨`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  i.reply({ embeds: [Embed] });
     }
      
     if (i.options.getSubcommand()=== 'joke') {
let a = Memer.joke()
const res = await translate(a, {from: "auto", to: "ja"})    
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`„Ç∏„Éß„Éº„ÇØ`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  i.reply({ embeds: [Embed] });
     }
      
      
     if (i.options.getSubcommand()=== 'advice') {
var uri = `https://api.adviceslip.com/advice`;
var res1 = encodeURI(uri);

      let getuni = async () => {
        let response = await axios.get(
          `${res1}`
          );
        let uni = response.data;
        return uni;
      };
    let uniValue = await getuni();
  const text = uniValue.slip.advice
  
translate(text, {from: "auto", to: "ja"}).then(async res=>{
        
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`„Ç¢„Éâ„Éê„Ç§„Çπ`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text.substr(0, 2000)}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  
  i.reply({ embeds: [Embed] });  
})  .catch(err => {
        if (err.name === 'AxiosError') {
  const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle('„Ç®„É©„Éº')
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
	.setDescription(`ÂèñÂæóÂá∫Êù•„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
			return i.reply({ embeds: [Embed] })
        }
  }
 )
     }
      
           if (i.options.getSubcommand()=== 'chat') {
const text = i.options.getString('text');
    var uri = `http://api.brainshop.ai/get?bid=153861&key=0ZjvbPWKAxJvcJ96&uid=1&msg=${text}`;
var res1 = encodeURI(uri);
      let getuni = async () => {
        let response = await axios.get(
          `${res1}`
          );
        let uni = response.data;
        return uni;
      };
    let uniValue = await getuni();
    
      translate(uniValue.cnt, {from: "auto", to: "ja"}).then(res=>{

  const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
.setTitle(text)
.setDescription("```"+res.text.substr(0, 2000)+"```")
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  
  i.reply({ embeds: [Embed] });  
        })
    }
      

           if (i.options.getSubcommand()=== 'bujoku') {
var uri = `https://evilinsult.com/generate_insult.php?lang=en&type=json`;
var res1 = encodeURI(uri);

      let getuni = async () => {
        let response = await axios.get(
          `${res1}`
          );
        let uni = response.data;
        return uni;
      };
    let uniValue = await getuni();
  const text = uniValue.insult
  
translate(text, {from: "auto", to: "ja"}).then(async res=>{
        
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`‰æÆËæ±„ÉØ„Éº„Éâ`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text.substr(0, 2000)}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  i.reply({ embeds: [Embed] }); 
  
})  .catch(err => {
        if (err.name === 'AxiosError') {
  const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle('„Ç®„É©„Éº')
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
	.setDescription(`ÂèñÂæóÂá∫Êù•„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
			return i.reply({ embeds: [Embed] })
        }
  }
 )

     }
      
     if (i.options.getSubcommand()=== 'name') {
var name = i.options.getString('name');

var uri = `https://api.genderize.io/?name=${name}`;
var res1 = encodeURI(uri);

      let getuni = async () => {
        let response = await axios.get(
          `${res1}`
          );
        let uni = response.data;
        return uni;
      };
    let uniValue = await getuni();

const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`${name}„ÅÆÊÄßÂà•`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`ÂêçÂâç: ${uniValue.name}\nÊÄßÂà•: ${uniValue.gender}\nÂèØËÉΩÊÄß: ${uniValue.probability * 100}%`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  
  i.reply({ embeds: [Embed] });  

  if(uniValue.gender === "null") {
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`„Ç®„É©„Éº`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`„Åù„ÅÆÂêçÂâç„ÅØÂà§Âà•Âá∫Êù•„Åæ„Åõ„Çì„ÄÇ\n„É≠„Éº„ÉûÂ≠óË°®Ë®ò„Åß„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  
  i.reply({ embeds: [Embed], ephemeral: true});  
    
  }
     }
      
     if (i.options.getSubcommand()=== 'omosiroi') {
var uri = `https://corporatebs-generator.sameerkumar.website/`;
var res1 = encodeURI(uri);

      let getuni = async () => {
        let response = await axios.get(
          `${res1}`
          );
        let uni = response.data;
        return uni;
      };
    let uniValue = await getuni();
  const text = uniValue.phrase
  
translate(text, {from: "auto", to: "ja"}).then(async res=>{
        
const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle(`„Éê„Ç∫„ÉØ„Éº„Éâ`)
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
      .setDescription(`${res.text.substr(0, 2000)}`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
  
  i.reply({ embeds: [Embed] });  
})  .catch(err => {
        if (err.name === 'AxiosError') {
  const Embed = new MessageEmbed()
	.setColor(client.config.color)
	.setTitle('„Ç®„É©„Éº')
	.setAuthor({ name: `${client.user.tag}`, iconURL: `${client.user.displayAvatarURL()}`, url: '' })
	.setDescription(`ÂèñÂæóÂá∫Êù•„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ`)
	.setTimestamp()
	.setFooter({ text: `/${cmdName}`, iconURL: '' });
			return i.reply({ embeds: [Embed] })
        }
  }
 )
     }
    
     }
}